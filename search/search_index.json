{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ModbusSniffer","text":"ModbusSniffer is a lightweight, cross-platform desktop application for monitoring Modbus RTU communication via serial ports.     Designed for engineers, technicians, and automation developers, it simplifies troubleshooting by showing decoded Modbus traffic in real-time."},{"location":"#key-features","title":"\ud83d\ude80 Key Features","text":"<ul> <li>\u2705 Real-time Modbus RTU frame capturing</li> <li>\u2705 Live Frame table view</li> <li>\u2705 Friendly graphical interface (PyQt6)</li> <li>\u2705 Message decoding with function and address information</li> <li>\u2705 Filtering, sorting and searching captured data</li> <li>\u2705 Exporting logs to txt and CSV</li> <li>\u2705 Sniffs raw Modbus RTU frames from serial ports (RS-485, USB)</li> <li>\u2705 Color-coded logging of request\u2013response frames in terminal view</li> <li>\u2705 Cross-platform: Windows &amp; Linux</li> <li>\u2705 MIT licensed, open-source</li> </ul>"},{"location":"#download-installation","title":"\ud83d\udce6 Download &amp; Installation","text":"<p>Install directly from PyPI:</p> <p><pre><code>pip install modbus-sniffer\n</code></pre> or download Binary files for Ubuntu and Windows from here.</p> <p>You can also build and install app from sourcess. Click here  for deatails about it.</p>"},{"location":"#user-interface-overview","title":"\ud83d\udda5\ufe0f User Interface Overview","text":"<ul> <li>Top Toolbar: Connect, Start/Stop Sniffing, Export Logs</li> <li>Main Table View: Real-time display of Modbus requests and responses</li> <li>Filters Panel: Filter by device ID, function code, or address</li> </ul>"},{"location":"#how-it-works","title":"\ud83d\udcda How It Works","text":"<p>ModbusSniffer opens a serial port and listens for Modbus RTU traffic. It parses each Modbus frame and displays it in a structured table.</p> <p>\u2139\ufe0f Tip: Use a USB Modbus sniffer cable or RS485 tap to capture traffic without interfering with the bus.</p>"},{"location":"#faq","title":"\u2753 FAQ","text":"<p>Q: Can I use it with USB-to-RS485 converters? Yes! As long as the converter exposes a COM port, it works out of the box.</p> <p>Q: Is it safe to use on a live bus? Yes \u2014 it is passive. It does not transmit any data.</p> <p>Q: Can I decode custom Modbus function codes? Not yet \u2014 support for custom decoding is planned in a future release.</p>"},{"location":"#support-feedback","title":"\ud83d\udcec Support &amp; Feedback","text":"<p>If you find a bug or have suggestions, open an issue on GitHub.</p> <p>MIT Licensed. Created by niwciu.</p>"},{"location":"#usage","title":"\u25b6\ufe0f Usage","text":""},{"location":"#run-gui-from-bash","title":"\ud83c\udf9b\ufe0f Run GUI from bash:","text":"<pre><code>modbus-sniffer-gui\n</code></pre>"},{"location":"#run-cli","title":"\ud83d\udda5\ufe0f Run CLI:","text":"<p>To list all options: <pre><code>modbus-sniffer -h\n</code></pre></p> <p>Example of runnig sniffer on ttyUSB0 with baud 115200 and no parity: <pre><code>modbus-sniffer -p /dev/ttyUSB0 -b 115200 -r none\n</code></pre></p> <p>For more usage options, development guide, and installation from source, visit the GitHub repository:</p> <p>\ud83d\udc49 ModbusSniffer on GitHub</p>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>Please see CONTRIBUTING.md  for development setup and contribution guidelines.</p>"},{"location":"#license","title":"\ud83d\udcdc License","text":"<p>MIT License \u2014 see the LICENSE file for details. This project is a fork of BADAndrea ModbusSniffer, maintained by niwciu with enhancements described above.</p> <p></p>"}]}